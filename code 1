maxposx=4.5
maxposz=5.5
r=0.5
dt=0.01
v=sqrt(10)
t=[0]
theta_v=[-pi/4]
theta_x=[0]
alpha=13.75
x=[1]
y=[0]
vx=[v*cos(theta_v)]
vy=[v*sin(theta_v)]

# Billiard table
tapete=box(size=(10.75,0.5,13.75+2*maxposx),color=color.green,pos=(0,0,0))
mesa=box(color=color.orange,size=(10,4,20),pos=(0,-2.2,0),material=materials.wood)
l1=box(color=color.orange,size=(11,1,0.5),pos=(0,0.5,6.75+maxposx),material=materials.wood)
l2=box(color=color.orange,size=(11,1,0.5),pos=(0,0.5,-6.75-maxposx),material=materials.wood)
l3=box(color=color.orange,size=(0.5,1,13+2*maxposx),pos=(5.25,0.5,0),material=materials.wood)
l4=box(color=color.orange,size=(0.5,1,13+2*maxposx),pos=(-5.25,0.5,0),material=materials.wood)
estadio=curve(color=color.orange,radius=0.35,material=materials.wood)
for i in arange(180):
	theta=i*pi/180
	estadio.append([(maxposx+0.75)*cos(theta),0.5,maxposz+(maxposx+0.75)*sin(theta)])
for i in arange(180):
	theta=i*pi/180
	estadio.append([-(maxposx+0.75)*cos(theta),0.5,-maxposz-(maxposx+0.75)*sin(theta)])
estadio.append([(maxposx+0.75)*cos(0),0.5,maxposz+(maxposx+0.75)*sin(0)])

#ball
ball=sphere(pos=vector(1,2*r,0),radius=r,color=color.white,material=materials.plastic)
#update movement
def cac():
    while t[-1]<1000000:
        if -alpha/2<=y[-1]<=alpha/2:
            if x[-1]+r>=10.75/2 or x[-1]-r<=-10.75/2:
                vx.append(-vx[-1])
                vy.append(vy[-1])
                theta_v.append(np.arctan(float(vy[-1]/vx[-1])))
            else:
                vx.append(vx[-1])
                vy.append(vy[-1])
                theta_v.append(theta_v[-1])
        if y[-1]<=-alpha/2:
            if x[-1]**2+(y[-1]+alpha/2)**2>=(maxposx-1)**2:
                theta_new=arctan(float((y[-1]+alpha/2)/x[-1]))
                theta_v.append(-theta_v[-1]+2*theta_new-np.pi)
                vx.append(v*cos(theta_v[-1]))
                vy.append(v*sin(theta_v[-1]))
            else:
                vx.append(vx[-1])
                vy.append(vy[-1])
                theta_v.append(theta_v[-1])
        if y[-1]>=alpha/2:
            if x[-1]**2+(y[-1]-alpha/2)**2>=(maxposx-1)**2:
                theta_new=arctan(float((y[-1]-alpha/2)/x[-1]))
                theta_v.append(-theta_v[-1]-np.pi+2*theta_new)
                vx.append(v*cos(theta_v[-1]))
                vy.append(v*sin(theta_v[-1]))
        x.append(x[-1]+dt*vx[-1])
        y.append(y[-1]+dt*vy[-1])
        t.append(t[-1]+dt)
        return x,y,t
